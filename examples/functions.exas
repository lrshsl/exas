"expr",

42, 69,,


f = fn arg {
	print arg,
},

| This is a comment, the following are docs:
||
|| Idea:
|| - Program close to the hardware
|| - No functions, only labeled blocks
||   - Don't wanna do the above, I need pattern matching
||   - Functions and macros are the same
||   - Functions can be const, which means they're run before the program starts (i.e. compiletime)
||
|| Hardware agnostic
|| - registers

| `void` is a comment, so it does nothing.
|
f1 = |void| fn {            | function f1
	print "f1 ran",          | prints a line
	calc x + 1,              | returns x + 1
},

f2 = fn x y {
	print "f2 ran with x = " x " and y = " y
},

OR = fn x  y {
},

let = fn var = value {
	print var "set to " value
}

